{"version":3,"sources":[" [synthetic:util/defineproperty] "," [synthetic:util/global] "," [synthetic:es6/symbol] "," [synthetic:es6/util/makeiterator] "," [synthetic:es6/util/arrayfromiterator] ","../node_modules/autotrack/lib/utilities.js"," [synthetic:es6/util/arrayfromiterable] ","../node_modules/autotrack/lib/usage.js","../node_modules/autotrack/lib/plugins/media-query-tracker.js","../node_modules/autotrack/lib/constants.js","../node_modules/autotrack/lib/provide.js"],"names":["$jscomp.defineProperty","$jscomp.global","$jscomp.initSymbol","$jscomp.Symbol","$jscomp.symbolCounter_","$jscomp.SYMBOL_PREFIX","$jscomp.arrayIterator","$jscomp.initSymbolIterator","$jscomp.iteratorPrototype","createFieldsObj","defaultFields","userFields","tracker","hitFilter","originalBuildHitTask","get","buildHitTask","model","set","target","event","assign","debounce","fn","wait","timeout","clearTimeout","setTimeout","args","$jscomp.arrayFromIterator","$jscomp.makeIterator","Object","i","len","sources","length","source","key","prototype","hasOwnProperty","call","plugins","CLEAN_URL_TRACKER","EVENT_TRACKER","IMPRESSION_TRACKER","MEDIA_QUERY_TRACKER","OUTBOUND_FORM_TRACKER","OUTBOUND_LINK_TRACKER","PAGE_VISIBILITY_TRACKER","SOCIAL_WIDGET_TRACKER","URL_CHANGE_TRACKER","MAX_SCROLL_TRACKER","PLUGIN_COUNT","keys","mediaMap","constructor","MediaQueryTracker","opts","VERSION","usageHex","parseInt","toString","str","toAdd","plugin","usageBin","substr","index","window","matchMedia","defaultOpts","changeTemplate","changeTimeout","fieldsObj","definitions","value","Array","isArray","changeListeners","processMediaQueries","forEach","definition","name","dimensionIndex","mediaName","getMatchName","addChangeListeners","match","items","item","getMediaList","media","matches","NULL_DIMENSION","mql","newValue","oldValue","handleChanges","transport","eventCategory","eventAction","eventLabel","nonInteraction","send","addListener","push","remove","listener","removeListener","provide","pluginName","pluginConstructor","gaAlias","GoogleAnalyticsObject","q","gaDevIds","indexOf","DEV_ID","gaplugins","charAt","toUpperCase","slice"],"mappings":"A,YAsCA,IAAAA,EACsC,UAAlC,EAAA,MAAO,OAAA,iBAAP,CACA,MAAA,eADA,CAEA,QAAQ,CAAC,CAAD,CAAS,CAAT,CAAmB,CAAnB,CAA+B,CAErC,GAAI,CAAA,IAAJ,EAAsB,CAAA,IAAtB,CACE,KAAM,KAAI,SAAJ,CAAc,2CAAd,CAAN,CAEE,CAAJ,EAAc,KAAA,UAAd,EAAiC,CAAjC,EAA2C,MAAA,UAA3C,GACA,CAAA,CAAO,CAAP,CADA,CACmB,CAAA,MADnB,CALqC,CAH3C,CCKAC,EAb2B,WAAlB,EAAC,MAAO,OAAR,EAAiC,MAAjC,GAa0B,IAb1B,CAa0B,IAb1B,CAEe,WAAlB,EAAC,MAAO,OAAR,EAA2C,IAA3C,EAAiC,MAAjC,CAAmD,MAAnD,CAW6B,IChBd,SAAA,EAAQ,EAAG,CAE9BC,CAAA,CAAqB,QAAQ,EAAG,EAE3BD,EAAA,OAAL,GACEA,CAAA,OADF,CAC6BE,CAD7B,CAJ8B,CAWhC,IAAAC,EAAyB,CASR,SAAA,EAAQ,CAAC,CAAD,CAAkB,CACzC,MA5BsBC,gBA4BtB,EAC6B,CAD7B,EACgD,EADhD,EACuDD,CAAA,EAFd;AAWd,QAAA,EAAQ,EAAG,CACtCF,CAAA,EACA,KAAI,EAAiBD,CAAA,OAAA,SAChB,EAAL,GACE,CADF,CACmBA,CAAA,OAAA,SADnB,CAEMA,CAAA,OAAA,CAAyB,UAAzB,CAFN,CAK8C,WAA9C,EAAI,MAAO,MAAA,UAAA,CAAgB,CAAhB,CAAX,EACED,CAAA,CACI,KAAA,UADJ,CACqB,CADrB,CACqC,CAC/B,aAAc,CAAA,CADiB,CAE/B,SAAU,CAAA,CAFqB,CAO/B,MAAO,QAAQ,EAAG,CAChB,MAAOM,EAAA,CAAsB,IAAtB,CADS,CAPa,CADrC,CAeFC,EAAA,CAA6B,QAAQ,EAAG,EAxBF,CAkChB,QAAA,EAAQ,CAAC,CAAD,CAAQ,CACtC,IAAI,EAAQ,CACZ,OAAOC,EAAA,CAA0B,QAAQ,EAAG,CAC1C,MAAI,EAAJ,CAAY,CAAA,OAAZ,CACS,CACL,KAAM,CAAA,CADD,CAEL,MAAO,CAAA,CAAM,CAAA,EAAN,CAFF,CADT,CAMS,CAAC,KAAM,CAAA,CAAP,CAPiC,CAArC,CAF+B,CA0BZ,QAAA,EAAQ,CAAC,CAAD,CAAO,CACzCD,CAAA,EAEI,EAAA,CAAW,CAAC,KAAM,CAAP,CAKf,EAAA,CAASN,CAAA,OAAA,SAAT,CAAA,CAA8C,QAAQ,EAAG,CAAE,MAAO,KAAT,CACzD,OAAyC,EATA,CCxFpB,QAAA,EAAQ,CAAC,CAAD,CAAW,CACxCM,CAAA,EAGA,KAAI,EAAqC,CAAD,CAAW,MAAA,SAAX,CACxC,OAAO,EAAA,CAAmB,CAAA,KAAA,CAAsB,CAAtB,CAAnB,CACHD,CAAA,CAA6C,CAA7C,CANoC;ACEd,QAAA,EAAQ,CAAC,CAAD,CAAW,CAG7C,IAFA,IAAI,CAAJ,CACI,EAAM,EACV,CAAQ,CAAA,CAAC,CAAD,CAAK,CAAA,KAAA,EAAL,MAAR,CAAA,CACE,CAAA,KAAA,CAAS,CAAA,MAAT,CAEF,OAAO,EANsC,CCO/CG,QAAgBA,EAAe,CAC3BC,CAD2B,CACZC,CADY,CACAC,CADA,CAE3BC,CAF2B,CAEmC,CAChE,GAAwB,UAAxB,EAAI,MAAOA,EAAX,CAAoC,CAClC,IAAMC,EAAuBF,CAAAG,IAAA,CAAY,cAAZ,CAC7B,OAAO,CACLC,aAAcA,QAAA,CAAuBC,CAAvB,CAAiC,CAC7CA,CAAAC,IAAA,CAAUR,CAAV,CAAyB,IAAzB,CAA+B,CAAA,CAA/B,CACAO,EAAAC,IAAA,CAAUP,CAAV,CAAsB,IAAtB,CAA4B,CAAA,CAA5B,CACAE,EAAA,CAAUI,CAAV,CAPmBE,IAAAA,EAOnB,CAPuCC,IAAAA,EAOvC,CACAN,EAAA,CAAqBG,CAArB,CAJ6C,CAD1C,CAF2B,CAWlC,MAAOI,EAAA,CAAO,EAAP,CAAWX,CAAX,CAA0BC,CAA1B,CAZuD,CAwElEW,QAAgBA,EAAQ,CAACC,CAAD,CAAKC,CAAL,CAAW,CACjC,IAAIC,CACJ,OAAO,SAAA,CAAS,CAAT,CAAkB,CAAT,IAAA,IAAA,EAAA,EAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,SAAA,OAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,SAAA,CAAA,CAAA,CACdC,aAAA,CAAaD,CAAb,CACAA,EAAA,CAAUE,UAAA,CAAW,QAAA,EAAM,CAAA,MAAAJ,EAAA,MAAA,CAAA,IAAA,CAAA,EAAA,OAAA,CAFJK,CCrFzB,WAAwB,MAAxB,CDqFyBA,CCrFzB,CAGSC,CAAA,CAA0BC,CAAA,CDkFVF,CClFU,CAA1B,CDoFoB,CAAA,CAAA,CAAjB,CAA8BJ,CAA9B,CAFa,CAFQ;AAiFnC,IAAaH,EAASU,MAAAV,OAATA,EAA0B,QAAA,CAASF,CAAT,CAAiB,CAAjB,CAA6B,CAAZ,IAAA,IAAA,EAAA,EAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,SAAA,OAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,SAAA,CAAA,CAAA,CACtD,KAASa,IAAAA,EAAI,CAAJA,CAAOC,EADkDC,CAC5CC,OAAtB,CAAsCH,CAAtC,CAA0CC,CAA1C,CAA+CD,CAAA,EAA/C,CAAoD,CAClD,IAAMI,EAASL,MAAA,CAFiDG,CAE1C,CAAQF,CAAR,CAAP,CAAf,CACSK,CAAT,KAASA,CAAT,GAAgBD,EAAhB,CACML,MAAAO,UAAAC,eAAAC,KAAA,CAAqCJ,CAArC,CAA6CC,CAA7C,CAAJ,GACElB,CAAA,CAAOkB,CAAP,CADF,CACgBD,CAAA,CAAOC,CAAP,CADhB,CAHgD,CAQpD,MAAOlB,EAT2D,CAApE,CE9KasB,EAAU,CACrBC,EAAmB,CADE,CAErBC,EAAe,CAFM,CAGrBC,EAAoB,CAHC,CAIrBC,EAAqB,CAJA,CAKrBC,EAAuB,CALF,CAMrBC,EAAuB,CANF,CAOrBC,EAAyB,CAPJ,CAQrBC,EAAuB,CARF,CASrBC,EAAoB,CATC,CAUrBC,EAAoB,EAVC,CF8KvB,CEhKMC,EAAerB,MAAAsB,KAAA,CAAYZ,CAAZ,CAAAN,OFgKrB,CGvKMmB,EAAW,EAafC;QANIC,EAMO,CAAC5C,CAAD,CAAU6C,CAAV,CAAgB,CACLZ,IAAAA,EAAAJ,CAAAI,EAATjC,EDiFbM,IAAA,CAAY,SAAZ,CEzGqBwC,OFyGrB,CAhBA,KAAMC,ECjEO/C,CDiEIG,IAAA,CAAY,SAAZ,CAAjB,CAnDO,EAAA6C,QAAA,CAoDiCD,CApDjC,EAAgB,GAAhB,CAAqB,EAArB,CAAAE,SAAA,CAAkC,CAAlC,CAqBP,IAAIC,CAAA3B,OAAJ,CA+BmDiB,CA/BnD,CAEE,IADA,IAAIW,EA8B6CX,CA9B7CW,CAAcD,CAAA3B,OAClB,CAAO4B,CAAP,CAAA,CACED,CACA,CADM,GACN,CADYA,CACZ,CAAAC,CAAA,EA8B2B,EAAA,CAAAX,CAAA,CAjEVY,CAkDrB,EAAA,CAeqBC,CAfdC,OAAA,CAAW,CAAX,CAAcC,CAAd,CAAP,CAA8B,CAA9B,CAeqBF,CAfaC,OAAA,CAAWC,CAAX,CAAmB,CAAnB,CCtDrBvD,EDwEbM,IAAA,CAAY,SAAZ,CAhDO0C,QAAA,CAgDwCK,CAhDxC,EAAgB,GAAhB,CAAqB,CAArB,CAAAJ,SAAA,CAAiC,EAAjC,CAgDP,CCrEOO,OAAAC,WAAL,GAWA,IAAAZ,EAIA,CAHIpC,CAAA,CATgBiD,CAElBC,eAAgB,IAAAA,eAFED,CAGlBE,cAAe,GAHGF,CAIlBG,UAAW,EAJOH,CAShB,CAAoBb,CAApB,CAGJ,CAAciB,CAAd,CAAcA,IAAAjB,EAAAiB,YAAd,CHiLqB,QGjLrB,EHiLK,MAAOC,EGjLZ,EHiL2C,IGjL3C,GHiLiCA,CGjLjC,GAEgCD,CAIhC,CAJgCA,IAAAjB,EAAAiB,YAIhC,CAJA,IAAAjB,EAAAiB,YAIA,CHsLKE,KAAAC,QAAA,CAAcF,CAAd,CAAA,CAAuBA,CAAvB,CAA+B,CAACA,CAAD,CGtLpC,CAHA,IAAA/D,EAGA,CAHeA,CAGf,CAFA,IAAAkE,EAEA,CAFuB,EAEvB,CAAAC,CAAA,CAAAA,IAAA,CANA,CAfA,CAJyB;AAgC3BA,QAAA,EAAmB,CAAnBA,CAAmB,CAAG,CACpB,CAAAtB,EAAAiB,YAAAM,QAAA,CAA8B,QAAA,CAACC,CAAD,CAAgB,CAE5C,GAAIA,CAAAC,KAAJ,EAAuBD,CAAAE,eAAvB,CAAkD,CAChD,IAAMC,EAAYC,CAAA,CAAkBJ,CAAlB,CAJF,EAKhBrE,EAAAM,IAAA,CAAiB,WAAjB,CAA+B+D,CAAAE,eAA/B,CAA0DC,CAA1D,CAEAE,EAAA,CAPgBA,CAOhB,CAAwBL,CAAxB,CAJgD,CAFN,CAA9C,CADoB,CAmBtBI,QAAA,EAAY,CAACJ,CAAD,CAAa,CACvB,IAAIM,CAEJN,EAAAO,MAAAR,QAAA,CAAyB,QAAA,CAACS,CAAD,CAAU,CAC7BC,CAAA,CAAaD,CAAAE,MAAb,CAAAC,QAAJ,GACEL,CADF,CACUE,CADV,CADiC,CAAnC,CAKA,OAAOF,EAAA,CAAQA,CAAAL,KAAR,CC5EmBW,WDoEH;AAiBzBP,QAAA,EAAkB,CAAlBA,CAAkB,CAACL,CAAD,CAAa,CAC7BA,CAAAO,MAAAR,QAAA,CAAyB,QAAA,CAACS,CAAD,CAAU,CAC3BK,CAAAA,CAAMJ,CAAA,CAAaD,CAAAE,MAAb,CACZ,KAAMpE,EAAKD,CAAA,CAAS,QAAA,EAAM,CAgB5B,IAAMyE,EAAWV,CAAA,CAfMJ,CAeN,CAAjB,CACMe,EApBuBC,CAoBZrF,EAAAG,IAAA,CAAiB,WAAjB,CAhBMkE,CAgByBE,eAA/B,CAEbY,EAAJ,GAAiBC,CAAjB,GAtB6BC,CAuB3BrF,EAAAM,IAAA,CAAiB,WAAjB,CAnBqB+D,CAmBUE,eAA/B,CAA0DY,CAA1D,CAUA,CAPMrF,CAON,CAPsB,CACpBwF,UAAW,QADS,CAEpBC,cAxBmBlB,CAwBJC,KAFK,CAGpBkB,YAAa,QAHO,CAIpBC,WA9ByBJ,CA8BbxC,EAAAc,eAAA,CAAyByB,CAAzB,CAAmCD,CAAnC,CAJQ,CAKpBO,eAAgB,CAAA,CALI,CAOtB,CAjC2BL,CAiC3BrF,EAAA2F,KAAA,CAAkB,OAAlB,CAA2B9F,CAAA,CAAgBC,CAAhB,CAjCAuF,CAkCvBxC,EAAAgB,UADuB,CAjCAwB,CAkCFrF,EADE,CAjCAqF,CAkCYxC,EAAA5C,UADZ,CAA3B,CAXF,CAnB4B,CAAf,CAHgB,CAKxB4C,EAAAe,cAFQ,CAIXsB,EAAAU,YAAA,CAAgBjF,CAAhB,CAP2B,EAQ3BuD,EAAA2B,KAAA,CAA0B,CAACX,EAAAA,CAAD,CAAMvE,EAAAA,CAAN,CAA1B,CAPiC,CAAnC,CAD6B,CAyC/B,CAAA,UAAA,OAAA,CAAAmF,QAAM,EAAG,CACP,IADO,IACE1E,EAAI,CADN,CACS2E,CAAhB,CAA0BA,CAA1B,CAAqC,IAAA7B,EAAA,CAAqB9C,CAArB,CAArC,CAA8DA,CAAA,EAA9D,CACE2E,CAAAb,EAAAc,eAAA,CAA4BD,CAAApF,EAA5B,CAFK,CAaT;CAAA,UAAA,eAAA,CAAAgD,QAAc,CAACyB,CAAD,CAAWD,CAAX,CAAqB,CACjC,MAAOC,EAAP,CAAkB,YAAlB,CAA2BD,CADM,CEvIrCc,UAA+B,CAACC,CAAD,CAAaC,CAAb,CAAgC,CAC7D,IAAMC,EAAU5C,MAAA6C,sBAAVD,EAA0C,IAChD5C,OAAA,CAAO4C,CAAP,CAAA,CAAkB5C,MAAA,CAAO4C,CAAP,CAAlB,EAAqC,QAAA,CAAS,CAAT,CAAkB,CAAT,IAAA,IAAA,EAAA,EAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,SAAA,OAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,SAAA,CAAA,CAAA,CAC5CP,EAACrC,MAAA,CAAO4C,CAAP,CAAAE,EAADT,CAAqBrC,MAAA,CAAO4C,CAAP,CAAAE,EAArBT,EAA0C,EAA1CA,MAAA,CADqD7E,CACrD,CADqD,CAKvDwC,OAAA+C,SAAA,CAAkB/C,MAAA+C,SAAlB,EAAqC,EACC,EAAtC,CAAI/C,MAAA+C,SAAAC,QAAA,CDjBgBC,QCiBhB,CAAJ,EACEjD,MAAA+C,SAAAV,KAAA,CDlBkBY,QCkBlB,CAIFjD,OAAA,CAAO4C,CAAP,CAAA,CAAgB,SAAhB,CAA2BF,CAA3B,CAAuCC,CAAvC,CAGA3C,OAAAkD,UAAA,CAAmBlD,MAAAkD,UAAnB,EAAuC,EACvClD,OAAAkD,UAAA,CAA4BR,CLsLrBS,OAAA,CAAW,CAAX,CAAAC,YAAA,EKtLP,CAA4BV,CLsLSW,MAAA,CAAU,CAAV,CKtLrC,CAAA,CAA2CV,CAjBkB,CAA/DF,CF6IA,CAAQ,mBAAR,CAA6BrD,CAA7B,CASAkC;QAASA,EAAY,CAACC,CAAD,CAAQ,CAC3B,MAAOrC,EAAA,CAASqC,CAAT,CAAP,GAA2BrC,CAAA,CAASqC,CAAT,CAA3B,CAA6CvB,MAAAC,WAAA,CAAkBsB,CAAlB,CAA7C,CAD2B","file":"","sourcesContent":[null,null,null,null,null,"/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {getAttributes} from 'dom-utils';\nimport MethodChain from './method-chain';\n\n\n/**\n * Accepts default and user override fields and an optional tracker, hit\n * filter, and target element and returns a single object that can be used in\n * `ga('send', ...)` commands.\n * @param {FieldsObj} defaultFields The default fields to return.\n * @param {FieldsObj} userFields Fields set by the user to override the\n *     defaults.\n * @param {Tracker=} tracker The tracker object to apply the hit filter to.\n * @param {Function=} hitFilter A filter function that gets\n *     called with the tracker model right before the `buildHitTask`. It can\n *     be used to modify the model for the current hit only.\n * @param {Element=} target If the hit originated from an interaction\n *     with a DOM element, hitFilter is invoked with that element as the\n *     second argument.\n * @param {(Event|TwttrEvent)=} event If the hit originated via a DOM event,\n *     hitFilter is invoked with that event as the third argument.\n * @return {!FieldsObj} The final fields object.\n */\nexport function createFieldsObj(\n    defaultFields, userFields, tracker = undefined,\n    hitFilter = undefined, target = undefined, event = undefined) {\n  if (typeof hitFilter == 'function') {\n    const originalBuildHitTask = tracker.get('buildHitTask');\n    return {\n      buildHitTask: (/** @type {!Model} */ model) => {\n        model.set(defaultFields, null, true);\n        model.set(userFields, null, true);\n        hitFilter(model, target, event);\n        originalBuildHitTask(model);\n      },\n    };\n  } else {\n    return assign({}, defaultFields, userFields);\n  }\n}\n\n\n/**\n * Retrieves the attributes from an DOM element and returns a fields object\n * for all attributes matching the passed prefix string.\n * @param {Element} element The DOM element to get attributes from.\n * @param {string} prefix An attribute prefix. Only the attributes matching\n *     the prefix will be returned on the fields object.\n * @return {FieldsObj} An object of analytics.js fields and values\n */\nexport function getAttributeFields(element, prefix) {\n  const attributes = getAttributes(element);\n  const attributeFields = {};\n\n  Object.keys(attributes).forEach(function(attribute) {\n    // The `on` prefix is used for event handling but isn't a field.\n    if (attribute.indexOf(prefix) === 0 && attribute != prefix + 'on') {\n      let value = attributes[attribute];\n\n      // Detects Boolean value strings.\n      if (value == 'true') value = true;\n      if (value == 'false') value = false;\n\n      const field = camelCase(attribute.slice(prefix.length));\n      attributeFields[field] = value;\n    }\n  });\n\n  return attributeFields;\n}\n\n\n/**\n * Accepts a function to be invoked once the DOM is ready. If the DOM is\n * already ready, the callback is invoked immediately.\n * @param {!Function} callback The ready callback.\n */\nexport function domReady(callback) {\n  if (document.readyState == 'loading') {\n    document.addEventListener('DOMContentLoaded', function fn() {\n      document.removeEventListener('DOMContentLoaded', fn);\n      callback();\n    });\n  } else {\n    callback();\n  }\n}\n\n\n/**\n * Returns a function, that, as long as it continues to be called, will not\n * actually run. The function will only run after it stops being called for\n * `wait` milliseconds.\n * @param {!Function} fn The function to debounce.\n * @param {number} wait The debounce wait timeout in ms.\n * @return {!Function} The debounced function.\n */\nexport function debounce(fn, wait) {\n  let timeout;\n  return function(...args) {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => fn(...args), wait);\n  };\n}\n\n\n/**\n * Accepts a function and returns a wrapped version of the function that is\n * expected to be called elsewhere in the system. If it's not called\n * elsewhere after the timeout period, it's called regardless. The wrapper\n * function also prevents the callback from being called more than once.\n * @param {!Function} callback The function to call.\n * @param {number=} wait How many milliseconds to wait before invoking\n *     the callback.\n * @return {!Function} The wrapped version of the passed function.\n */\nexport function withTimeout(callback, wait = 2000) {\n  let called = false;\n  const fn = function() {\n    if (!called) {\n      called = true;\n      callback();\n    }\n  };\n  setTimeout(fn, wait);\n  return fn;\n}\n\n// Maps trackers to queue by tracking ID.\nconst queueMap = {};\n\n/**\n * Queues a function for execution in the next call stack, or immediately\n * before any send commands are executed on the tracker. This allows\n * autotrack plugins to defer running commands until after all other plugins\n * are required but before any other hits are sent.\n * @param {!Tracker} tracker\n * @param {!Function} fn\n */\nexport function deferUntilPluginsLoaded(tracker, fn) {\n  const trackingId = tracker.get('trackingId');\n  const ref = queueMap[trackingId] = queueMap[trackingId] || {};\n\n  const processQueue = () => {\n    clearTimeout(ref.timeout);\n    if (ref.send) {\n      MethodChain.remove(tracker, 'send', ref.send);\n    }\n    delete queueMap[trackingId];\n\n    ref.queue.forEach((fn) => fn());\n  };\n\n  clearTimeout(ref.timeout);\n  ref.timeout = setTimeout(processQueue, 0);\n  ref.queue = ref.queue || [];\n  ref.queue.push(fn);\n\n  if (!ref.send) {\n    ref.send = (originalMethod) => {\n      return (...args) => {\n        processQueue();\n        originalMethod(...args);\n      };\n    };\n    MethodChain.add(tracker, 'send', ref.send);\n  }\n}\n\n\n/**\n * A small shim of Object.assign that aims for brevity over spec-compliant\n * handling all the edge cases.\n * @param {!Object} target The target object to assign to.\n * @param {...?Object} sources Additional objects who properties should be\n *     assigned to target. Non-objects are converted to objects.\n * @return {!Object} The modified target object.\n */\nexport const assign = Object.assign || function(target, ...sources) {\n  for (let i = 0, len = sources.length; i < len; i++) {\n    const source = Object(sources[i]);\n    for (let key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\n\n\n/**\n * Accepts a string containing hyphen or underscore word separators and\n * converts it to camelCase.\n * @param {string} str The string to camelCase.\n * @return {string} The camelCased version of the string.\n */\nexport function camelCase(str) {\n  return str.replace(/[\\-\\_]+(\\w?)/g, function(match, p1) {\n    return p1.toUpperCase();\n  });\n}\n\n\n/**\n * Capitalizes the first letter of a string.\n * @param {string} str The input string.\n * @return {string} The capitalized string\n */\nexport function capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\n/**\n * Indicates whether the passed variable is a JavaScript object.\n * @param {*} value The input variable to test.\n * @return {boolean} Whether or not the test is an object.\n */\nexport function isObject(value) {\n  return typeof value == 'object' && value !== null;\n}\n\n\n/**\n * Accepts a value that may or may not be an array. If it is not an array,\n * it is returned as the first item in a single-item array.\n * @param {*} value The value to convert to an array if it is not.\n * @return {!Array} The array-ified value.\n */\nexport function toArray(value) {\n  return Array.isArray(value) ? value : [value];\n}\n\n\n/**\n * @return {number} The current date timestamp\n */\nexport function now() {\n  return +new Date();\n}\n\n\n/*eslint-disable */\n// https://gist.github.com/jed/982883\n/** @param {?=} a */\nexport const uuid = function b(a){return a?(a^Math.random()*16>>a/4).toString(16):([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g,b)};\n/*eslint-enable */\n",null,"/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {USAGE_PARAM, VERSION, VERSION_PARAM} from './constants';\n\n\nexport const plugins = {\n  CLEAN_URL_TRACKER: 1,\n  EVENT_TRACKER: 2,\n  IMPRESSION_TRACKER: 3,\n  MEDIA_QUERY_TRACKER: 4,\n  OUTBOUND_FORM_TRACKER: 5,\n  OUTBOUND_LINK_TRACKER: 6,\n  PAGE_VISIBILITY_TRACKER: 7,\n  SOCIAL_WIDGET_TRACKER: 8,\n  URL_CHANGE_TRACKER: 9,\n  MAX_SCROLL_TRACKER: 10,\n};\n\n\nconst PLUGIN_COUNT = Object.keys(plugins).length;\n\n\n/**\n * Tracks the usage of the passed plugin by encoding a value into a usage\n * string sent with all hits for the passed tracker.\n * @param {!Tracker} tracker The analytics.js tracker object.\n * @param {number} plugin The plugin enum.\n */\nexport function trackUsage(tracker, plugin) {\n  trackVersion(tracker);\n  trackPlugin(tracker, plugin);\n}\n\n\n/**\n * Converts a hexadecimal string to a binary string.\n * @param {string} hex A hexadecimal numeric string.\n * @return {string} a binary numeric string.\n */\nfunction convertHexToBin(hex) {\n  return parseInt(hex || '0', 16).toString(2);\n}\n\n\n/**\n * Converts a binary string to a hexadecimal string.\n * @param {string} bin A binary numeric string.\n * @return {string} a hexadecimal numeric string.\n */\nfunction convertBinToHex(bin) {\n  return parseInt(bin || '0', 2).toString(16);\n}\n\n\n/**\n * Adds leading zeros to a string if it's less than a minimum length.\n * @param {string} str A string to pad.\n * @param {number} len The minimum length of the string\n * @return {string} The padded string.\n */\nfunction padZeros(str, len) {\n  if (str.length < len) {\n    let toAdd = len - str.length;\n    while (toAdd) {\n      str = '0' + str;\n      toAdd--;\n    }\n  }\n  return str;\n}\n\n\n/**\n * Accepts a binary numeric string and flips the digit from 0 to 1 at the\n * specified index.\n * @param {string} str The binary numeric string.\n * @param {number} index The index to flip the bit.\n * @return {string} The new binary string with the bit flipped on\n */\nfunction flipBitOn(str, index) {\n  return str.substr(0, index) + 1 + str.substr(index + 1);\n}\n\n\n/**\n * Accepts a tracker and a plugin index and flips the bit at the specified\n * index on the tracker's usage parameter.\n * @param {Object} tracker An analytics.js tracker.\n * @param {number} pluginIndex The index of the plugin in the global list.\n */\nfunction trackPlugin(tracker, pluginIndex) {\n  const usageHex = tracker.get('&' + USAGE_PARAM);\n  let usageBin = padZeros(convertHexToBin(usageHex), PLUGIN_COUNT);\n\n  // Flip the bit of the plugin being tracked.\n  usageBin = flipBitOn(usageBin, PLUGIN_COUNT - pluginIndex);\n\n  // Stores the modified usage string back on the tracker.\n  tracker.set('&' + USAGE_PARAM, convertBinToHex(usageBin));\n}\n\n\n/**\n * Accepts a tracker and adds the current version to the version param.\n * @param {Object} tracker An analytics.js tracker.\n */\nfunction trackVersion(tracker) {\n  tracker.set('&' + VERSION_PARAM, VERSION);\n}\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {NULL_DIMENSION} from '../constants';\nimport provide from '../provide';\nimport {plugins, trackUsage} from '../usage';\nimport {assign, createFieldsObj,\n        debounce, isObject, toArray} from '../utilities';\n\n\n/**\n * Declares the MediaQueryList instance cache.\n */\nconst mediaMap = {};\n\n\n/**\n * Class for the `mediaQueryTracker` analytics.js plugin.\n * @implements {MediaQueryTrackerPublicInterface}\n */\nclass MediaQueryTracker {\n  /**\n   * Registers media query tracking.\n   * @param {!Tracker} tracker Passed internally by analytics.js\n   * @param {?Object} opts Passed by the require command.\n   */\n  constructor(tracker, opts) {\n    trackUsage(tracker, plugins.MEDIA_QUERY_TRACKER);\n\n    // Feature detects to prevent errors in unsupporting browsers.\n    if (!window.matchMedia) return;\n\n    /** @type {MediaQueryTrackerOpts} */\n    const defaultOpts = {\n      // definitions: unefined,\n      changeTemplate: this.changeTemplate,\n      changeTimeout: 1000,\n      fieldsObj: {},\n      // hitFilter: undefined,\n    };\n\n    this.opts = /** @type {MediaQueryTrackerOpts} */ (\n        assign(defaultOpts, opts));\n\n    // Exits early if media query data doesn't exist.\n    if (!isObject(this.opts.definitions)) return;\n\n    this.opts.definitions = toArray(this.opts.definitions);\n    this.tracker = tracker;\n    this.changeListeners = [];\n\n    this.processMediaQueries();\n  }\n\n  /**\n   * Loops through each media query definition, sets the custom dimenion data,\n   * and adds the change listeners.\n   */\n  processMediaQueries() {\n    this.opts.definitions.forEach((definition) => {\n      // Only processes definitions with a name and index.\n      if (definition.name && definition.dimensionIndex) {\n        const mediaName = this.getMatchName(definition);\n        this.tracker.set('dimension' + definition.dimensionIndex, mediaName);\n\n        this.addChangeListeners(definition);\n      }\n    });\n  }\n\n  /**\n   * Takes a definition object and return the name of the matching media item.\n   * If no match is found, the NULL_DIMENSION value is returned.\n   * @param {Object} definition A set of named media queries associated\n   *     with a single custom dimension.\n   * @return {string} The name of the matched media or NULL_DIMENSION.\n   */\n  getMatchName(definition) {\n    let match;\n\n    definition.items.forEach((item) => {\n      if (getMediaList(item.media).matches) {\n        match = item;\n      }\n    });\n    return match ? match.name : NULL_DIMENSION;\n  }\n\n  /**\n   * Adds change listeners to each media query in the definition list.\n   * Debounces the changes to prevent unnecessary hits from being sent.\n   * @param {Object} definition A set of named media queries associated\n   *     with a single custom dimension\n   */\n  addChangeListeners(definition) {\n    definition.items.forEach((item) => {\n      const mql = getMediaList(item.media);\n      const fn = debounce(() => {\n        this.handleChanges(definition);\n      }, this.opts.changeTimeout);\n\n      mql.addListener(fn);\n      this.changeListeners.push({mql, fn});\n    });\n  }\n\n  /**\n   * Handles changes to the matched media. When the new value differs from\n   * the old value, a change event is sent.\n   * @param {Object} definition A set of named media queries associated\n   *     with a single custom dimension\n   */\n  handleChanges(definition) {\n    const newValue = this.getMatchName(definition);\n    const oldValue = this.tracker.get('dimension' + definition.dimensionIndex);\n\n    if (newValue !== oldValue) {\n      this.tracker.set('dimension' + definition.dimensionIndex, newValue);\n\n      /** @type {FieldsObj} */\n      const defaultFields = {\n        transport: 'beacon',\n        eventCategory: definition.name,\n        eventAction: 'change',\n        eventLabel: this.opts.changeTemplate(oldValue, newValue),\n        nonInteraction: true,\n      };\n      this.tracker.send('event', createFieldsObj(defaultFields,\n          this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n    }\n  }\n\n  /**\n   * Removes all event listeners and instance properties.\n   */\n  remove() {\n    for (let i = 0, listener; listener = this.changeListeners[i]; i++) {\n      listener.mql.removeListener(listener.fn);\n    }\n  }\n\n  /**\n   * Sets the default formatting of the change event label.\n   * This can be overridden by setting the `changeTemplate` option.\n   * @param {string} oldValue The value of the media query prior to the change.\n   * @param {string} newValue The value of the media query after the change.\n   * @return {string} The formatted event label.\n   */\n  changeTemplate(oldValue, newValue) {\n    return oldValue + ' => ' + newValue;\n  }\n}\n\n\nprovide('mediaQueryTracker', MediaQueryTracker);\n\n\n/**\n * Accepts a media query and returns a MediaQueryList object.\n * Caches the values to avoid multiple unnecessary instances.\n * @param {string} media A media query value.\n * @return {MediaQueryList} The matched media.\n */\nfunction getMediaList(media) {\n  return mediaMap[media] || (mediaMap[media] = window.matchMedia(media));\n}\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nexport const VERSION = '2.4.1';\nexport const DEV_ID = 'i5iSjo';\n\nexport const VERSION_PARAM = '_av';\nexport const USAGE_PARAM = '_au';\n\nexport const NULL_DIMENSION = '(not set)';\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {DEV_ID} from './constants';\nimport {capitalize} from './utilities';\n\n\n/**\n * Provides a plugin for use with analytics.js, accounting for the possibility\n * that the global command queue has been renamed or not yet defined.\n * @param {string} pluginName The plugin name identifier.\n * @param {Function} pluginConstructor The plugin constructor function.\n */\nexport default function provide(pluginName, pluginConstructor) {\n  const gaAlias = window.GoogleAnalyticsObject || 'ga';\n  window[gaAlias] = window[gaAlias] || function(...args) {\n    (window[gaAlias].q = window[gaAlias].q || []).push(args);\n  };\n\n  // Adds the autotrack dev ID if not already included.\n  window.gaDevIds = window.gaDevIds || [];\n  if (window.gaDevIds.indexOf(DEV_ID) < 0) {\n    window.gaDevIds.push(DEV_ID);\n  }\n\n  // Formally provides the plugin for use with analytics.js.\n  window[gaAlias]('provide', pluginName, pluginConstructor);\n\n  // Registers the plugin on the global gaplugins object.\n  window.gaplugins = window.gaplugins || {};\n  window.gaplugins[capitalize(pluginName)] = pluginConstructor;\n}\n"]}